{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LiveStreamPlayer.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface Props {\n  streamId: string;\n  isLive: boolean;\n}\n\nexport default function LiveStreamPlayer({ streamId, isLive }: Props) {\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [volume, setVolume] = useState(1);\n  const [isMuted, setIsMuted] = useState(false);\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const setupStream = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Simulate stream connection setup\n        await new Promise(resolve => setTimeout(resolve, 1500));\n        \n        if (videoRef.current) {\n          // In a real implementation, this would connect to a WebRTC stream\n          // For demo purposes, we'll use a placeholder video\n          const video = videoRef.current;\n          \n          if (isLive) {\n            // Simulate live stream - in reality this would be a WebRTC connection\n            video.src = \"https://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\";\n            video.loop = true;\n          } else {\n            // Offline stream\n            video.src = \"\";\n            setError(\"Stream is currently offline\");\n          }\n          \n          video.addEventListener('loadeddata', () => {\n            setLoading(false);\n          });\n\n          video.addEventListener('error', () => {\n            setError(\"Failed to load stream\");\n            setLoading(false);\n          });\n\n          video.addEventListener('play', () => setIsPlaying(true));\n          video.addEventListener('pause', () => setIsPlaying(false));\n        }\n      } catch (err) {\n        setError(\"Unable to connect to stream\");\n        setLoading(false);\n      }\n    };\n\n    setupStream();\n\n    return () => {\n      // Cleanup\n      if (videoRef.current) {\n        videoRef.current.src = \"\";\n      }\n    };\n  }, [streamId, isLive]);\n\n  const togglePlay = () => {\n    if (videoRef.current) {\n      if (isPlaying) {\n        videoRef.current.pause();\n      } else {\n        videoRef.current.play();\n      }\n    }\n  };\n\n  const toggleMute = () => {\n    if (videoRef.current) {\n      videoRef.current.muted = !isMuted;\n      setIsMuted(!isMuted);\n    }\n  };\n\n  const handleVolumeChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const newVolume = parseFloat(e.target.value);\n    setVolume(newVolume);\n    if (videoRef.current) {\n      videoRef.current.volume = newVolume;\n    }\n  };\n\n  const toggleFullscreen = () => {\n    if (videoRef.current) {\n      if (!isFullscreen) {\n        if (videoRef.current.requestFullscreen) {\n          videoRef.current.requestFullscreen();\n        }\n      } else {\n        if (document.exitFullscreen) {\n          document.exitFullscreen();\n        }\n      }\n      setIsFullscreen(!isFullscreen);\n    }\n  };\n\n  if (loading) {\n    return (\n      <div className=\"relative w-full aspect-video bg-black rounded-lg overflow-hidden flex items-center justify-center\">\n        <div className=\"text-center text-white\">\n          <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-white mb-4\"></div>\n          <p>Connecting to stream...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className=\"relative w-full aspect-video bg-black rounded-lg overflow-hidden flex items-center justify-center\">\n        <div className=\"text-center text-white\">\n          <div className=\"text-4xl mb-4\">üì∫</div>\n          <p className=\"text-lg font-semibold mb-2\">Stream Unavailable</p>\n          <p className=\"text-sm text-gray-300\">{error}</p>\n          <button \n            onClick={() => window.location.reload()}\n            className=\"mt-4 px-4 py-2 bg-primary text-primary-foreground rounded-lg hover:bg-primary/90 transition-colors\"\n          >\n            Retry\n          </button>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"relative w-full aspect-video bg-black rounded-lg overflow-hidden group\">\n      <video\n        ref={videoRef}\n        className=\"w-full h-full object-cover\"\n        autoPlay={isLive}\n        playsInline\n        poster=\"https://via.placeholder.com/800x450/1a1a1a/ffffff?text=Stream+Loading\"\n      />\n\n      {/* Stream Status Overlay */}\n      {isLive && (\n        <div className=\"absolute top-4 left-4 z-10\">\n          <div className=\"flex items-center gap-2 px-3 py-1 bg-red-600 text-white rounded-full text-sm font-medium\">\n            <div className=\"w-2 h-2 bg-white rounded-full animate-pulse\"></div>\n            LIVE\n          </div>\n        </div>\n      )}\n\n      {/* Video Controls */}\n      <div className=\"absolute bottom-0 left-0 right-0 bg-gradient-to-t from-black/80 to-transparent p-4 opacity-0 group-hover:opacity-100 transition-opacity duration-300\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center gap-4\">\n            <button\n              onClick={togglePlay}\n              className=\"text-white hover:text-primary transition-colors\"\n              aria-label={isPlaying ? \"Pause\" : \"Play\"}\n            >\n              <div className=\"w-8 h-8 flex items-center justify-center\">\n                {isPlaying ? \"‚è∏Ô∏è\" : \"‚ñ∂Ô∏è\"}\n              </div>\n            </button>\n\n            <button\n              onClick={toggleMute}\n              className=\"text-white hover:text-primary transition-colors\"\n              aria-label={isMuted ? \"Unmute\" : \"Mute\"}\n            >\n              <div className=\"w-6 h-6 flex items-center justify-center\">\n                {isMuted ? \"üîá\" : \"üîä\"}\n              </div>\n            </button>\n\n            <div className=\"flex items-center gap-2\">\n              <input\n                type=\"range\"\n                min=\"0\"\n                max=\"1\"\n                step=\"0.1\"\n                value={volume}\n                onChange={handleVolumeChange}\n                className=\"w-20 h-1 bg-gray-600 rounded-lg appearance-none cursor-pointer\"\n              />\n            </div>\n          </div>\n\n          <div className=\"flex items-center gap-4\">\n            {isLive && (\n              <div className=\"text-white text-sm\">\n                <span className=\"text-red-400\">‚óè</span> Live Stream\n              </div>\n            )}\n            \n            <button\n              onClick={toggleFullscreen}\n              className=\"text-white hover:text-primary transition-colors\"\n              aria-label=\"Fullscreen\"\n            >\n              <div className=\"w-6 h-6 flex items-center justify-center\">\n                ‚õ∂\n              </div>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Click to play overlay for non-live streams */}\n      {!isLive && !isPlaying && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-black/50\">\n          <button\n            onClick={togglePlay}\n            className=\"w-16 h-16 bg-primary text-primary-foreground rounded-full flex items-center justify-center hover:bg-primary/90 transition-colors\"\n          >\n            <div className=\"text-2xl\">‚ñ∂Ô∏è</div>\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ChatWidget.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\n\ninterface ChatMessage {\n  id: string;\n  username: string;\n  message: string;\n  timestamp: Date;\n  isSystem?: boolean;\n}\n\ninterface Props {\n  streamId: string;\n  isLive: boolean;\n}\n\nconst mockMessages: ChatMessage[] = [\n  {\n    id: \"1\",\n    username: \"System\",\n    message: \"Welcome to the stream!\",\n    timestamp: new Date(Date.now() - 300000),\n    isSystem: true\n  },\n  {\n    id: \"2\",\n    username: \"Viewer123\",\n    message: \"Great stream! Love the content üî•\",\n    timestamp: new Date(Date.now() - 240000)\n  },\n  {\n    id: \"3\",\n    username: \"GameFan\",\n    message: \"What game are you playing next?\",\n    timestamp: new Date(Date.now() - 180000)\n  },\n  {\n    id: \"4\",\n    username: \"MusicLover\",\n    message: \"This beat is amazing! üéµ\",\n    timestamp: new Date(Date.now() - 120000)\n  },\n  {\n    id: \"5\",\n    username: \"NewViewer\",\n    message: \"Just joined, what did I miss?\",\n    timestamp: new Date(Date.now() - 60000)\n  }\n];\n\nexport default function ChatWidget({ streamId, isLive }: Props) {\n  const [messages, setMessages] = useState<ChatMessage[]>(mockMessages);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [username, setUsername] = useState(\"Anonymous\");\n  const [isConnected, setIsConnected] = useState(isLive);\n  const [error, setError] = useState<string | null>(null);\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const chatContainerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    // Simulate real-time message updates for live streams\n    if (isLive) {\n      const interval = setInterval(() => {\n        // Randomly add new messages to simulate live chat\n        if (Math.random() > 0.7) {\n          const randomMessages = [\n            \"This is awesome! üëè\",\n            \"Keep it up!\",\n            \"Love this content\",\n            \"Amazing work!\",\n            \"Can you do a tutorial on this?\",\n            \"First time watching, great stuff!\",\n            \"How long have you been streaming?\",\n            \"What's your setup?\",\n            \"This is so cool! üöÄ\",\n            \"Thanks for the stream!\"\n          ];\n          \n          const randomUsernames = [\n            \"StreamFan\", \"Viewer\" + Math.floor(Math.random() * 1000),\n            \"ChatUser\", \"LiveWatcher\", \"ContentLover\", \"NewFollower\"\n          ];\n\n          const newMsg: ChatMessage = {\n            id: Date.now().toString(),\n            username: randomUsernames[Math.floor(Math.random() * randomUsernames.length)],\n            message: randomMessages[Math.floor(Math.random() * randomMessages.length)],\n            timestamp: new Date()\n          };\n\n          setMessages(prev => [...prev, newMsg]);\n        }\n      }, 5000 + Math.random() * 10000); // Random interval between 5-15 seconds\n\n      return () => clearInterval(interval);\n    }\n  }, [isLive]);\n\n  useEffect(() => {\n    // Auto-scroll to bottom when new messages arrive\n    scrollToBottom();\n  }, [messages]);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  const sendMessage = async () => {\n    if (!newMessage.trim()) return;\n    if (!isLive) {\n      setError(\"Cannot send messages when stream is offline\");\n      return;\n    }\n\n    try {\n      const message: ChatMessage = {\n        id: Date.now().toString(),\n        username: username,\n        message: newMessage.trim(),\n        timestamp: new Date()\n      };\n\n      // In a real app, this would send to WebSocket/API\n      setMessages(prev => [...prev, message]);\n      setNewMessage(\"\");\n      setError(null);\n    } catch (err) {\n      setError(\"Failed to send message. Please try again.\");\n    }\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      sendMessage();\n    }\n  };\n\n  const formatTime = (date: Date) => {\n    return date.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n  };\n\n  const getUserColor = (username: string) => {\n    const colors = [\n      \"text-blue-400\", \"text-green-400\", \"text-yellow-400\", \n      \"text-purple-400\", \"text-pink-400\", \"text-indigo-400\",\n      \"text-red-400\", \"text-orange-400\", \"text-teal-400\"\n    ];\n    const hash = username.split('').reduce((a, b) => {\n      a = ((a << 5) - a) + b.charCodeAt(0);\n      return a & a;\n    }, 0);\n    return colors[Math.abs(hash) % colors.length];\n  };\n\n  return (\n    <div className=\"flex flex-col h-[600px] bg-card border border-border rounded-lg overflow-hidden\">\n      {/* Chat Header */}\n      <div className=\"flex items-center justify-between p-4 border-b border-border bg-card\">\n        <div className=\"flex items-center gap-2\">\n          <h3 className=\"font-semibold text-card-foreground\">Live Chat</h3>\n          <div className={`w-2 h-2 rounded-full ${isConnected ? 'bg-green-500' : 'bg-gray-500'}`}></div>\n        </div>\n        <div className=\"text-sm text-muted-foreground\">\n          {messages.length} messages\n        </div>\n      </div>\n\n      {/* Messages Container */}\n      <div \n        ref={chatContainerRef}\n        className=\"flex-1 overflow-y-auto p-4 space-y-3 bg-card\"\n      >\n        {!isLive && (\n          <div className=\"text-center py-8\">\n            <div className=\"text-4xl mb-2\">üí¨</div>\n            <p className=\"text-muted-foreground\">Chat is disabled when stream is offline</p>\n          </div>\n        )}\n\n        {isLive && messages.map((msg) => (\n          <div key={msg.id} className=\"flex flex-col gap-1\">\n            <div className=\"flex items-center gap-2 text-xs\">\n              <span className=\"text-muted-foreground\">\n                {formatTime(msg.timestamp)}\n              </span>\n              <span \n                className={`font-medium ${\n                  msg.isSystem \n                    ? 'text-yellow-500' \n                    : getUserColor(msg.username)\n                }`}\n              >\n                {msg.username}\n              </span>\n            </div>\n            <div className=\"text-sm text-card-foreground leading-relaxed pl-2 border-l-2 border-border\">\n              {msg.message}\n            </div>\n          </div>\n        ))}\n        <div ref={messagesEndRef} />\n      </div>\n\n      {/* Message Input */}\n      <div className=\"p-4 border-t border-border bg-card\">\n        {/* Username Input */}\n        <div className=\"mb-3\">\n          <input\n            type=\"text\"\n            placeholder=\"Your username\"\n            value={username}\n            onChange={(e) => setUsername(e.target.value)}\n            className=\"w-full px-3 py-2 text-sm bg-background border border-border rounded-lg focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent\"\n            maxLength={20}\n          />\n        </div>\n\n        {/* Message Input */}\n        <div className=\"flex gap-2\">\n          <textarea\n            placeholder={isLive ? \"Type your message...\" : \"Chat disabled - stream offline\"}\n            value={newMessage}\n            onChange={(e) => setNewMessage(e.target.value)}\n            onKeyPress={handleKeyPress}\n            disabled={!isLive}\n            className=\"flex-1 px-3 py-2 text-sm bg-background border border-border rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-primary focus:border-transparent disabled:opacity-50 disabled:cursor-not-allowed\"\n            rows={2}\n            maxLength={500}\n          />\n          <button\n            onClick={sendMessage}\n            disabled={!isLive || !newMessage.trim()}\n            className=\"px-4 py-2 bg-primary text-primary-foreground rounded-lg font-medium hover:bg-primary/90 transition-colors disabled:opacity-50 disabled:cursor-not-allowed text-sm\"\n          >\n            Send\n          </button>\n        </div>\n\n        {/* Character Count */}\n        <div className=\"flex items-center justify-between mt-2 text-xs text-muted-foreground\">\n          <div>\n            {error && <span className=\"text-red-500\">{error}</span>}\n          </div>\n          <div>\n            {newMessage.length}/500\n          </div>\n        </div>\n\n        {/* Chat Rules */}\n        <div className=\"mt-3 text-xs text-muted-foreground\">\n          <p>Be respectful and follow community guidelines</p>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 838, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/live/%5BstreamId%5D/page.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport LiveStreamPlayer from \"../../../components/LiveStreamPlayer\";\nimport ChatWidget from \"../../../components/ChatWidget\";\n\ninterface StreamData {\n  id: string;\n  title: string;\n  creator: string;\n  viewers: number;\n  isLive: boolean;\n  description: string;\n  category: string;\n  startedAt: string;\n}\n\nconst mockStreamData: Record<string, StreamData> = {\n  stream1: {\n    id: \"stream1\",\n    title: \"Gaming Session - Epic Battles\",\n    creator: \"GamerPro\",\n    viewers: 1234,\n    isLive: true,\n    description: \"Join me for an epic gaming session! We'll be playing the latest games and having fun with the community.\",\n    category: \"Gaming\",\n    startedAt: \"2024-01-15T10:30:00Z\"\n  },\n  stream2: {\n    id: \"stream2\",\n    title: \"Music Production Live\",\n    creator: \"BeatMaker\",\n    viewers: 567,\n    isLive: true,\n    description: \"Creating beats live! Watch as I produce music from scratch and share production tips.\",\n    category: \"Music\",\n    startedAt: \"2024-01-15T11:00:00Z\"\n  },\n  stream3: {\n    id: \"stream3\",\n    title: \"Cooking Show - Italian Cuisine\",\n    creator: \"ChefMaster\",\n    viewers: 890,\n    isLive: false,\n    description: \"Learn to cook authentic Italian dishes with traditional recipes and techniques.\",\n    category: \"Lifestyle\",\n    startedAt: \"2024-01-15T09:00:00Z\"\n  }\n};\n\nexport default function LiveStreamPage() {\n  const params = useParams();\n  const streamId = params.streamId as string;\n  const [streamData, setStreamData] = useState<StreamData | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [isFollowing, setIsFollowing] = useState(false);\n\n  useEffect(() => {\n    const loadStreamData = async () => {\n      setLoading(true);\n      setError(null);\n\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 800));\n        \n        const data = mockStreamData[streamId];\n        if (!data) {\n          setError(\"Stream not found\");\n          return;\n        }\n\n        setStreamData(data);\n      } catch (err) {\n        setError(\"Failed to load stream data\");\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    if (streamId) {\n      loadStreamData();\n    }\n  }, [streamId]);\n\n  const formatViewers = (count: number) => {\n    if (count >= 1000) {\n      return `${(count / 1000).toFixed(1)}K`;\n    }\n    return count.toString();\n  };\n\n  const formatDuration = (startTime: string) => {\n    const start = new Date(startTime);\n    const now = new Date();\n    const diff = now.getTime() - start.getTime();\n    const hours = Math.floor(diff / (1000 * 60 * 60));\n    const minutes = Math.floor((diff % (1000 * 60 * 60)) / (1000 * 60));\n    \n    if (hours > 0) {\n      return `${hours}h ${minutes}m`;\n    }\n    return `${minutes}m`;\n  };\n\n  const handleFollow = () => {\n    setIsFollowing(!isFollowing);\n    // In a real app, this would make an API call\n  };\n\n  if (loading) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary\"></div>\n          <p className=\"mt-4 text-muted-foreground\">Loading stream...</p>\n        </div>\n      </div>\n    );\n  }\n\n  if (error || !streamData) {\n    return (\n      <div className=\"container mx-auto px-4 py-8\">\n        <div className=\"text-center\">\n          <div className=\"text-6xl mb-4\">üòû</div>\n          <h1 className=\"text-2xl font-bold mb-2\">Stream Not Found</h1>\n          <p className=\"text-muted-foreground mb-6\">\n            {error || \"The stream you're looking for doesn't exist or has ended.\"}\n          </p>\n          <a \n            href=\"/\" \n            className=\"inline-flex px-6 py-3 bg-primary text-primary-foreground rounded-lg font-medium hover:bg-primary/90 transition-colors\"\n          >\n            Back to Home\n          </a>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto px-4 py-6\">\n      <div className=\"grid grid-cols-1 lg:grid-cols-4 gap-6\">\n        {/* Main Content */}\n        <div className=\"lg:col-span-3\">\n          {/* Video Player */}\n          <div className=\"mb-6\">\n            <LiveStreamPlayer streamId={streamId} isLive={streamData.isLive} />\n          </div>\n\n          {/* Stream Info */}\n          <div className=\"bg-card border border-border rounded-lg p-6\">\n            <div className=\"flex items-start justify-between mb-4\">\n              <div className=\"flex-1\">\n                <div className=\"flex items-center gap-3 mb-2\">\n                  <h1 className=\"text-2xl font-bold text-card-foreground\">\n                    {streamData.title}\n                  </h1>\n                  {streamData.isLive && (\n                    <span className=\"px-3 py-1 bg-red-600 text-white text-sm font-medium rounded-full\">\n                      LIVE\n                    </span>\n                  )}\n                </div>\n                \n                <div className=\"flex items-center gap-4 text-sm text-muted-foreground mb-3\">\n                  <span>{formatViewers(streamData.viewers)} viewers</span>\n                  <span>‚Ä¢</span>\n                  <span>{streamData.isLive ? `Started ${formatDuration(streamData.startedAt)} ago` : 'Stream ended'}</span>\n                  <span>‚Ä¢</span>\n                  <span className=\"px-2 py-1 bg-secondary rounded-full\">\n                    {streamData.category}\n                  </span>\n                </div>\n              </div>\n            </div>\n\n            {/* Creator Info */}\n            <div className=\"flex items-center justify-between border-t border-border pt-4\">\n              <div className=\"flex items-center gap-3\">\n                <div className=\"w-12 h-12 bg-primary/20 rounded-full flex items-center justify-center\">\n                  <span className=\"text-primary font-bold text-lg\">\n                    {streamData.creator.charAt(0)}\n                  </span>\n                </div>\n                <div>\n                  <h3 className=\"font-semibold text-card-foreground\">\n                    {streamData.creator}\n                  </h3>\n                  <p className=\"text-sm text-muted-foreground\">Content Creator</p>\n                </div>\n              </div>\n              \n              <button\n                onClick={handleFollow}\n                className={`px-6 py-2 rounded-lg font-medium transition-colors ${\n                  isFollowing\n                    ? \"bg-secondary text-secondary-foreground hover:bg-secondary/80\"\n                    : \"bg-primary text-primary-foreground hover:bg-primary/90\"\n                }`}\n              >\n                {isFollowing ? \"Following\" : \"Follow\"}\n              </button>\n            </div>\n\n            {/* Description */}\n            <div className=\"mt-6\">\n              <h4 className=\"font-semibold mb-2\">About this stream</h4>\n              <p className=\"text-muted-foreground leading-relaxed\">\n                {streamData.description}\n              </p>\n            </div>\n          </div>\n        </div>\n\n        {/* Chat Sidebar */}\n        <div className=\"lg:col-span-1\">\n          <div className=\"sticky top-24\">\n            <ChatWidget streamId={streamId} isLive={streamData.isLive} />\n          </div>\n        </div>\n      </div>\n\n      {/* Stream Controls (if user is the broadcaster) */}\n      {streamData.creator === \"CurrentUser\" && (\n        <div className=\"fixed bottom-6 right-6\">\n          <div className=\"bg-card border border-border rounded-lg p-4 shadow-lg\">\n            <h4 className=\"font-semibold mb-3\">Stream Controls</h4>\n            <div className=\"flex gap-2\">\n              <button className=\"px-4 py-2 bg-red-600 text-white rounded-lg text-sm font-medium hover:bg-red-700 transition-colors\">\n                End Stream\n              </button>\n              <button className=\"px-4 py-2 bg-secondary text-secondary-foreground rounded-lg text-sm font-medium hover:bg-secondary/80 transition-colors\">\n                Settings\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1348, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0],"debugId":null}}]
}